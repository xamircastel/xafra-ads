# Dockerfile multistage para compilar y ejecutar
# Etapa 1: Build
FROM maven:3.8.4-openjdk-17 as builder

WORKDIR /app
COPY pom.xml .
COPY src ./src

# Compilar la aplicaci칩n
RUN mvn clean package -DskipTests=true

# Etapa 2: Runtime
FROM openjdk:17-jdk-alpine

WORKDIR /app

# Copiar el WAR compilado de la etapa anterior
COPY --from=builder /app/target/ads-xafra.war app.war

# Crear directorio de logs
RUN mkdir -p /logs

# Exponer puerto
EXPOSE 8080

# Variables de entorno optimizadas para Cloud Run
ENV PORT=8080
ENV SPRING_PROFILES_ACTIVE=prod
ENV JAVA_OPTS="-Xmx1g -Xms512m -XX:+UseG1GC -XX:MaxGCPauseMillis=100 -Djava.awt.headless=true -Dspring.main.lazy-initialization=true"

# Comando para ejecutar la aplicaci칩n con lazy initialization para startup m치s r치pido
CMD ["sh", "-c", "exec java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /app/app.war --server.port=$PORT"]
